@{
    ViewData["Title"] = "Home Page";
}

<h1 class="container text-center mt-2 mb-5" style="color:blueviolet">Dashboard</h1>

<div id="errorMessage" asp-validation-summary="All" class="text-danger text-center"></div>

<div class="container row" id="dahsboard" onload="drawChart()">
    <div class="col-1"></div>
    <div class="col-8">
        <div id="bar" class="w-100"></div>
        <div id="pie" class="w-100"></div>
        <div id="radar" class="w-100"></div>
    </div>
    <div class="col-2">
        <select id="graphType" class="form-control" oninput="changeChart()">
            <option value="bar">Bar Chart</option>
            <option value="pie">Pie Chart</option>
            <option value="radar">Radar Chart</option>
        </select>
    </div>
    <div class="col-1"></div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script type="text/javascript">
    
    const userId = ('; ' + document.cookie).split(`; userId=`).pop().split(';')[0];
    let responseData;

    setData();

    let timerInterval;
    Swal.fire({
        title: "Please Wait",
        timer: 500,
        timerProgressBar: true,
        showClass: {
            popup: `
          animate__faster
        `
        },
        hideClass: {
            popup: `
          animate__faster
        `
        },
        didOpen: () => {
            Swal.showLoading();
            const timer = Swal.getPopup().querySelector("b");
            timerInterval = setInterval(() => {
                timer.textContent = `${Swal.getTimerLeft()}`;
            }, 500);
        },
        willClose: () => {
            clearInterval(timerInterval);
        }
    }).then((result) => {
        drawChart();
    });

    async function setData() {
        const response = await fetch(`/Api/getUserTask?userId=${userId}`);
        responseData = await response.json();
    }

    async function drawChart() {
        document.getElementById('bar').style.display = 'block';
        document.getElementById('pie').style.display = 'none';
        document.getElementById('radar').style.display = 'none';
        if (responseData.isSuccess) {
            let isData = false;
            responseData.result.forEach((ele) => {
                if (ele != 0) {
                    isData = true;
                }
            });
            if (!isData) {
                document.getElementById('errorMessage').innerHTML = 'No Tasks Assigned Yet!';
                document.getElementById('dahsboard').innerHTML = null;
                return;
            }
            var options = {
                chart: {
                    type: 'bar',
                    height: '450px',
                    width: '700px'
                },
                series: [{
                    name: 'status',
                    data: responseData.result
                }],
                xaxis: {
                    categories: ["todo", "in-progress", "bug", "error", "completed"]
                }
            };

            var chart = new ApexCharts(document.querySelector("#bar"), options);
            chart.render();
        }
        else {
            document.getElementById('errorMessage').innerHTML = responseData.errorMessage;
        }
    }


    async function changeChart() {
        let type = document.getElementById('graphType').value;
        if (responseData.isSuccess) {
            if (type === 'pie') {
                document.getElementById('bar').style.display = 'none';
                document.getElementById('radar').style.display = 'none';
                document.getElementById('pie').style.display = 'block';
                var options = {
                    series: responseData.result,
                    chart: {
                        height: '450px',
                        width: '500px',
                        type: 'pie'
                    },
                    labels: ["todo", "in-progress", "bug", "error", "completed"]
                };

                var chart1 = new ApexCharts(document.querySelector("#pie"), options);
                chart1.render();
            }
            else if (type === 'bar') {
                drawChart();
                return;
            }
            else if (type === 'radar') {
                document.getElementById('bar').style.display = 'none';
                document.getElementById('radar').style.display = 'block';
                document.getElementById('pie').style.display = 'none';
                var options = {
                    series: [{
                        name: 'Count',
                        data: responseData.result,
                    }],
                    chart: {
                        height: 350,
                        type: 'radar',
                    },
                    yaxis: {
                        stepSize: 3
                    },
                    xaxis: {
                        categories: ["todo", "in-progress", "bug", "error", "completed"]
                    }
                };

                var chart = new ApexCharts(document.querySelector("#radar"), options);
                chart.render();
            }
        }
        else {
            document.getElementById('errorMessage').innerHTML = responseData.errorMessage;
        }
    }
</script>